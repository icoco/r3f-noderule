{"ast":null,"code":"import { Primitive as e } from \"@radix-ui/react-primitive\";\nimport * as r from \"react\";\nimport t from \"@babel/runtime/helpers/esm/extends\";\nexport const Arrow = /*#__PURE__*/r.forwardRef((i, n) => {\n  const {\n    as: s = o,\n    ...a\n  } = i;\n  /*#__PURE__*/\n\n  return r.createElement(e, t({}, a, {\n    as: s,\n    ref: n\n  }));\n});\nconst o = /*#__PURE__*/r.forwardRef((e, o) => {\n  const {\n    width: i = 10,\n    height: n = 5,\n    ...s\n  } = e;\n  /*#__PURE__*/\n\n  return r.createElement(\"svg\", t({}, s, {\n    ref: o,\n    width: i,\n    height: n,\n    viewBox: \"0 0 30 10\",\n    preserveAspectRatio: \"none\"\n  }), /*#__PURE__*/r.createElement(\"polygon\", {\n    points: \"0,0 30,0 15,10\"\n  }));\n});\n/*#__PURE__*/\n\nexport const Root = Arrow;","map":{"version":3,"sources":["packages/react/arrow/src/Arrow.tsx"],"names":["Arrow","React","forwardRef","props","forwardedRef","as","ArrowImpl","arrowProps","_react","Primitive","ref","width","height","viewBox","preserveAspectRatio","points","Root"],"mappings":";;;OAeA,MAAMA,KAAAA,GAAAA,aAAQC,CAAAA,CAAMC,UAAND,CAAiB,CAACE,CAAD,EAAQC,CAAR,KAAQA;AACrC,QAAA;AAAMC,IAAAA,EAAAA,EAAEA,CAAAA,GAAKC,CAAb;AAAaA,OAAcC;AAA3B,MAA0CJ,CAA1C;AAA0CA;;AAC1C,SAAOK,CAAAA,CAAAA,aAAAA,CAACC,CAADD,EAAAA,CAAAA,CAAAA,EAAAA,EAAeD,CAAfC,EAAAA;AAA2BH,IAAAA,EAAAA,EAAIA,CAA/BG;AAAmCE,IAAAA,GAAAA,EAAKN;AAAxCI,GAAAA,CAAAA,CAAP;AAA+CJ,CAFnCH,CAAd;AAKA,MAAMK,CAAAA,GAAAA,aAAYL,CAAAA,CAAMC,UAAND,CAChB,CAACE,CAAD,EAAQC,CAAR,KAAQA;AACN,QAAA;AAAMO,IAAAA,KAAAA,EAAEA,CAAAA,GAAQ,EAAhB;AAAMA,IAAAA,MAAAA,EAAcC,CAAAA,GAAS,CAA7B;AAA6B,OAAML;AAAnC,MAAkDJ,CAAlD;AAAkDA;;AAClD,SACEK,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EACMD,CADNC,EAAAA;AAEEE,IAAAA,GAAAA,EAAKN,CAFPI;AAGEG,IAAAA,KAAAA,EAAOA,CAHTH;AAIEI,IAAAA,MAAAA,EAAQA,CAJVJ;AAKEK,IAAAA,OAAAA,EAAQ,WALVL;AAMEM,IAAAA,mBAAAA,EAAoB;AANtBN,GAAAA,CAAAA,EAMsB,aAEpBA,CAAAA,CAAAA,aAAAA,CAAAA,SAAAA,EAAAA;AAASO,IAAAA,MAAAA,EAAO;AAAhBP,GAAAA,CARFA,CADF;AASoB,CAZNP,CAAlB;AAYwB;;AAAA,OAQxB,MAAMe,IAAAA,GAAOhB,KAAb","sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Polymorphic from '@radix-ui/react-polymorphic';\n\nconst NAME = 'Arrow';\nconst DEFAULT_TAG = 'svg';\n\ntype ArrowOwnProps = Polymorphic.OwnProps<typeof Primitive>;\ntype ArrowPrimitive = Polymorphic.ForwardRefComponent<typeof DEFAULT_TAG, ArrowOwnProps>;\n\n/**\n * We pass `ArrowImpl` in the `as` prop so that the whole svg\n * is replaced when consumer passes an `as` prop\n */\nconst Arrow = React.forwardRef((props, forwardedRef) => {\n  const { as = ArrowImpl, ...arrowProps } = props;\n  return <Primitive {...arrowProps} as={as} ref={forwardedRef} />;\n}) as ArrowPrimitive;\n\nconst ArrowImpl = React.forwardRef<SVGSVGElement, React.ComponentProps<typeof DEFAULT_TAG>>(\n  (props, forwardedRef) => {\n    const { width = 10, height = 5, ...arrowProps } = props;\n    return (\n      <svg\n        {...arrowProps}\n        ref={forwardedRef}\n        width={width}\n        height={height}\n        viewBox=\"0 0 30 10\"\n        preserveAspectRatio=\"none\"\n      >\n        <polygon points=\"0,0 30,0 15,10\" />\n      </svg>\n    );\n  }\n);\n\nArrow.displayName = NAME;\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowPrimitive };\n"]},"metadata":{},"sourceType":"module"}