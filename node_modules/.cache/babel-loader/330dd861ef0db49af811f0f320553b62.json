{"ast":null,"code":"import * as e from \"react\";\nexport function useCallbackRef(r) {\n  const t = e.useRef(r);\n  return e.useEffect(() => {\n    t.current = r;\n  }), e.useCallback((...e) => {\n    var r;\n    return null === (r = t.current) || void 0 === r ? void 0 : r.call(t, ...e);\n  }, []);\n}","map":{"version":3,"sources":["packages/react/use-callback-ref/src/useCallbackRef.tsx"],"names":["useCallbackRef","callback","callbackRef","React","useRef","useEffect","current","useCallback","args"],"mappings":";OAMA,SAASA,cAAT,CAA2DC,CAA3D,EAA2DA;AACzD,QAAMC,CAAAA,GAAcC,CAAAA,CAAMC,MAAND,CAAaF,CAAbE,CAApB;AAMA,SAJAA,CAAAA,CAAME,SAANF,CAAgB,MAAA;AACdD,IAAAA,CAAAA,CAAYI,OAAZJ,GAAsBD,CAAtBC;AAAsBD,GADxBE,GAIOA,CAAAA,CAAMI,WAANJ,CACJ,CAAA,GAAIK,CAAJ,KAAIA;AAAS,QAAA,CAAA;AACZ,WAAA,UAAA,CAAA,GAAON,CAAAA,CAAYI,OAAnB,KAAmBA,KAAnB,CAAmBA,KAAnB,CAAA,GAAA,KAAA,CAAA,GAAOJ,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAyBM,CAAzBN,CAAP;AAAgCM,GAF7BL,EAIL,EAJKA,CAAP;AAIE","sourcesContent":["import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return React.useCallback(\n    ((...args) => {\n      return callbackRef.current?.(...args);\n    }) as T,\n    []\n  );\n}\n\nexport { useCallbackRef };\n"]},"metadata":{},"sourceType":"module"}