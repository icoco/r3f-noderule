{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContentAssist = void 0;\n\nconst interpreter_1 = require(\"../../grammar/interpreter\");\n\nconst first_1 = __importDefault(require(\"lodash/first\"));\n\nconst isUndefined_1 = __importDefault(require(\"lodash/isUndefined\"));\n\nclass ContentAssist {\n  initContentAssist() {}\n\n  computeContentAssist(startRuleName, precedingInput) {\n    const startRuleGast = this.gastProductionsCache[startRuleName];\n\n    if ((0, isUndefined_1.default)(startRuleGast)) {\n      throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n    }\n\n    return (0, interpreter_1.nextPossibleTokensAfter)([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n  } // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n\n\n  getNextPossibleTokenTypes(grammarPath) {\n    const topRuleName = (0, first_1.default)(grammarPath.ruleStack);\n    const gastProductions = this.getGAstProductions();\n    const topProduction = gastProductions[topRuleName];\n    const nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n    return nextPossibleTokenTypes;\n  }\n\n}\n\nexports.ContentAssist = ContentAssist;","map":{"version":3,"sources":["../../../../../src/parse/parser/traits/context_assist.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAMA,MAAA,aAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAIA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,MAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AAGA,MAAa,aAAb,CAA0B;AACxB,EAAA,iBAAiB,GAAA,CAAK;;AAEf,EAAA,oBAAoB,CAEzB,aAFyB,EAGzB,cAHyB,EAGD;AAExB,UAAM,aAAa,GAAG,KAAK,oBAAL,CAA0B,aAA1B,CAAtB;;AAEA,QAAI,CAAA,GAAA,aAAA,CAAA,OAAA,EAAY,aAAZ,CAAJ,EAAgC;AAC9B,YAAM,KAAK,CAAC,UAAU,aAAa,oCAAxB,CAAX;AACD;;AAED,WAAO,CAAA,GAAA,aAAA,CAAA,uBAAA,EACL,CAAC,aAAD,CADK,EAEL,cAFK,EAGL,KAAK,YAHA,EAIL,KAAK,YAJA,CAAP;AAMD,GApBuB,CAsBxB;AACA;;;AACO,EAAA,yBAAyB,CAE9B,WAF8B,EAEA;AAE9B,UAAM,WAAW,GAAG,CAAA,GAAA,OAAA,CAAA,OAAA,EAAM,WAAW,CAAC,SAAlB,CAApB;AACA,UAAM,eAAe,GAAG,KAAK,kBAAL,EAAxB;AACA,UAAM,aAAa,GAAG,eAAe,CAAC,WAAD,CAArC;AACA,UAAM,sBAAsB,GAAG,IAAI,aAAA,CAAA,oBAAJ,CAC7B,aAD6B,EAE7B,WAF6B,EAG7B,YAH6B,EAA/B;AAIA,WAAO,sBAAP;AACD;;AApCuB;;AAA1B,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContentAssist = void 0;\nconst interpreter_1 = require(\"../../grammar/interpreter\");\nconst first_1 = __importDefault(require(\"lodash/first\"));\nconst isUndefined_1 = __importDefault(require(\"lodash/isUndefined\"));\nclass ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if ((0, isUndefined_1.default)(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return (0, interpreter_1.nextPossibleTokensAfter)([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = (0, first_1.default)(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\nexports.ContentAssist = ContentAssist;\n//# sourceMappingURL=context_assist.js.map"]},"metadata":{},"sourceType":"script"}