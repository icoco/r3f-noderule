{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as t from \"@radix-ui/react-visually-hidden\";\nimport { Slottable as o } from \"@radix-ui/react-slot\";\nimport { Portal as n } from \"@radix-ui/react-portal\";\nimport * as r from \"@radix-ui/react-popper\";\nimport { extendPrimitive as i } from \"@radix-ui/react-primitive\";\nimport { Presence as a } from \"@radix-ui/react-presence\";\nimport { useRect as s } from \"@radix-ui/react-use-rect\";\nimport { usePrevious as l } from \"@radix-ui/react-use-previous\";\nimport { useLayoutEffect as c } from \"@radix-ui/react-use-layout-effect\";\nimport { useEscapeKeydown as u } from \"@radix-ui/react-use-escape-keydown\";\nimport { useControllableState as p } from \"@radix-ui/react-use-controllable-state\";\nimport { createContext as d } from \"@radix-ui/react-context\";\nimport { useComposedRefs as m } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as f } from \"@radix-ui/primitive\";\nimport * as g from \"react\";\nimport E from \"@babel/runtime/helpers/esm/extends\";\n\nfunction x(e) {\n  return {\n    type: \"machine.actions.assign\",\n    assign: e\n  };\n}\n\nlet y, T;\n\nconst C = x((e, t) => {\n  var o;\n  return { ...e,\n    id: null !== (o = t.id) && void 0 !== o ? o : e.id\n  };\n}),\n      v = function (e, {\n  debug: t = !1,\n  warnOnUnknownTransitions: o = !1\n} = {}) {\n  let n = e.initial,\n      r = e.context;\n\n  const i = [],\n        a = s => {\n    var l, c;\n    const u = e.states[n],\n          p = s.type,\n          d = null === (l = e.on) || void 0 === l ? void 0 : l[p],\n          m = null === (c = u.on) || void 0 === c ? void 0 : c[p],\n          f = null != d ? d : m;\n    if (void 0 === f) o && console.warn(`From state: \"${n}\", event \"${p}\" has no transition to any state`);else {\n      const {\n        target: o,\n        actions: l = [],\n        cond: c = () => !0\n      } = f,\n            p = o ? e.states[o] : {};\n\n      if (c(r, s)) {\n        const e = (u.exit || []).concat(l, p.entry || []);\n        r = function (e, t, o) {\n          let n = o;\n          return null == e || e.forEach(e => {\n            \"function\" == typeof e ? e(n, t, a) : \"machine.actions.assign\" === e.type && (n = e.assign(n, t));\n          }), n;\n        }(e, s, r), o && (n = o, t && (console.group(\"event:\", s), console.log(\"state:\", n), console.log(\"context:\", r), console.groupEnd()), i.forEach(e => e({\n          state: n,\n          context: r\n        })));\n      }\n    }\n  };\n\n  return {\n    subscribe: function (e) {\n      return i.push(e), () => {\n        i.splice(i.indexOf(e), 1);\n      };\n    },\n    send: a,\n    getContext: function () {\n      return r;\n    }\n  };\n}({\n  initial: \"closed\",\n  context: {\n    id: null,\n    delayed: !1\n  },\n  on: {\n    FOCUS: {\n      target: \"open\"\n    }\n  },\n  states: {\n    closed: {\n      entry: [x(e => ({ ...e,\n        id: null\n      }))],\n      on: {\n        OPEN: {\n          target: \"opening\"\n        }\n      }\n    },\n    opening: {\n      entry: [(e, t, o) => {\n        const n = t.delayDuration,\n              r = () => o({\n          type: \"DELAY_TIMER_END\"\n        });\n\n        void 0 === n ? r() : y = window.setTimeout(r, n);\n      }, C, x(e => ({ ...e,\n        delayed: !0\n      }))],\n      exit: [() => clearTimeout(y)],\n      on: {\n        DELAY_TIMER_END: {\n          target: \"open\"\n        },\n        CLOSE: {\n          target: \"closed\"\n        }\n      }\n    },\n    open: {\n      entry: [C],\n      exit: [x(e => ({ ...e,\n        delayed: !1\n      }))],\n      on: {\n        OPEN: {\n          target: \"open\"\n        },\n        CLOSE: {\n          target: \"closing\",\n          cond: (e, t) => e.id === t.id\n        }\n      }\n    },\n    closing: {\n      entry: [(e, t, o) => {\n        var n;\n        const r = null !== (n = t.skipDelayDuration) && void 0 !== n ? n : 300;\n        T = window.setTimeout(() => o({\n          type: \"SKIP_DELAY_TIMER_END\"\n        }), r);\n      }],\n      exit: [() => clearTimeout(T)],\n      on: {\n        OPEN: {\n          target: \"open\"\n        },\n        SKIP_DELAY_TIMER_END: {\n          target: \"closed\"\n        }\n      }\n    }\n  }\n}),\n      [b, D] = d(\"Tooltip\");\n\nexport const Tooltip = t => {\n  const {\n    children: o,\n    open: n,\n    defaultOpen: i = !1,\n    onOpenChange: a,\n    delayDuration: s = 700,\n    skipDelayDuration: l = 300\n  } = t,\n        [u, d] = g.useState(null),\n        m = e(),\n        [f = !1, E] = p({\n    prop: n,\n    defaultProp: i,\n    onChange: a\n  }),\n        [x, y] = g.useState(n ? \"instant-open\" : \"closed\");\n  g.useEffect(() => v.subscribe(({\n    state: e,\n    context: t\n  }) => {\n    \"open\" === e && t.id === m ? E(!0) : E(!1);\n  }), [m, E]), g.useEffect(() => v.subscribe(({\n    state: e,\n    context: t\n  }) => {\n    t.id === m ? y(\"open\" === e ? t.delayed ? \"delayed-open\" : \"instant-open\" : \"closed\") : y(\"closed\");\n  }), [m]);\n  const T = g.useCallback(() => v.send({\n    type: \"FOCUS\",\n    id: m\n  }), [m]),\n        C = g.useCallback(() => v.send({\n    type: \"OPEN\",\n    id: m,\n    delayDuration: s\n  }), [m, s]),\n        D = g.useCallback(() => v.send({\n    type: \"CLOSE\",\n    id: m,\n    skipDelayDuration: l\n  }), [l, m]);\n  return g.useEffect(() => () => D(), [D]), c(() => {\n    !0 === n && v.send({\n      type: \"OPEN\",\n      id: m\n    });\n  }, [m, n]), /*#__PURE__*/g.createElement(r.Root, null, /*#__PURE__*/g.createElement(b, {\n    contentId: m,\n    open: f,\n    stateAttribute: x,\n    trigger: u,\n    onTriggerChange: d,\n    onFocus: T,\n    onOpen: C,\n    onClose: D\n  }, o));\n};\n/*#__PURE__*/\n\nconst w = \"button\";\nexport const TooltipTrigger = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    as: o = w,\n    ...n\n  } = e,\n        i = D(\"TooltipTrigger\"),\n        a = m(t, e => i.onTriggerChange(e));\n  /*#__PURE__*/\n\n  return g.createElement(r.Anchor, E({\n    type: \"button\",\n    \"aria-describedby\": i.open ? i.contentId : void 0,\n    \"data-state\": i.stateAttribute\n  }, n, {\n    as: o,\n    ref: a,\n    onMouseEnter: f(e.onMouseEnter, i.onOpen),\n    onMouseLeave: f(e.onMouseLeave, i.onClose),\n    onMouseDown: f(e.onMouseDown, i.onClose),\n    onFocus: f(e.onFocus, i.onFocus),\n    onBlur: f(e.onBlur, i.onClose),\n    onKeyDown: f(e.onKeyDown, e => {\n      \"Enter\" !== e.key && \" \" !== e.key || i.onClose();\n    })\n  }));\n});\n/*#__PURE__*/\n\nexport const TooltipContent = /*#__PURE__*/g.forwardRef((e, t) => {\n  const {\n    forceMount: o,\n    ...n\n  } = e,\n        r = D(\"TooltipContent\");\n  /*#__PURE__*/\n\n  return g.createElement(a, {\n    present: o || r.open\n  }, /*#__PURE__*/g.createElement(h, E({\n    ref: t\n  }, n)));\n});\nconst h = /*#__PURE__*/g.forwardRef((e, i) => {\n  const {\n    children: a,\n    \"aria-label\": s,\n    portalled: l = !0,\n    ...c\n  } = e,\n        p = D(\"TooltipContent\"),\n        d = l ? n : g.Fragment;\n  return u(() => p.onClose()), /*#__PURE__*/g.createElement(d, null, /*#__PURE__*/g.createElement(O, null), /*#__PURE__*/g.createElement(r.Content, E({\n    \"data-state\": p.stateAttribute\n  }, c, {\n    ref: i,\n    style: { ...c.style,\n      \"--radix-tooltip-content-transform-origin\": \"var(--radix-popper-transform-origin)\"\n    }\n  }), /*#__PURE__*/g.createElement(o, null, a), /*#__PURE__*/g.createElement(t.Root, {\n    id: p.contentId,\n    role: \"tooltip\"\n  }, s || a)));\n});\n/*#__PURE__*/\n\nexport const TooltipArrow = i(r.Arrow, {\n  displayName: \"TooltipArrow\"\n});\n\nfunction O() {\n  const e = D(\"CheckTriggerMoved\"),\n        t = s(e.trigger),\n        o = null == t ? void 0 : t.left,\n        n = l(o),\n        r = null == t ? void 0 : t.top,\n        i = l(r),\n        a = e.onClose;\n  return g.useEffect(() => {\n    (void 0 !== n && n !== o || void 0 !== i && i !== r) && a();\n  }, [a, n, i, o, r]), null;\n}\n\nexport const Root = Tooltip;\nexport const Trigger = TooltipTrigger;\nexport const Content = TooltipContent;\nexport const Arrow = TooltipArrow;","map":{"version":3,"sources":["packages/react/tooltip/src/createStateMachine.tsx","packages/react/tooltip/src/tooltipStateChart.tsx","packages/react/tooltip/src/Tooltip.tsx"],"names":["stateChart","debug","warnOnUnknownTransitions","currentState","initial","currentContext","context","subscriptions","callback","push","splice","indexOf","forEach","state","send","event","stateDefinition","states","type","topLevelTransition","on","stateTransition","transition","undefined","console","warn","actions","target","nextState","cond","nextStateDefinition","allActions","exit","concat","entry","executeActions","group","log","groupEnd","nextContext","action","assign","subscribe","getContext","assignFn","delayTimerId","skipDelayTimerId","delayDuration","sendTimerEnd","window","setTimeout","clearTimeout","skipDelayDuration","setId","$ef54466d8a95ecaa234e3ec978fbe68$export$assign","id","delayed","FOCUS","closed","OPEN","opening","DELAY_TIMER_END","CLOSE","open","closing","SKIP_DELAY_TIMER_END","stateMachine","$ef54466d8a95ecaa234e3ec978fbe68$export$createStateMachine","TooltipProvider","useTooltipContext","createContext","Tooltip","props","children","openProp","defaultOpen","onOpenChange","trigger","setTrigger","React","useState","contentId","useId","setOpen","useControllableState","prop","defaultProp","onChange","stateAttribute","setStateAttribute","useEffect","handleFocus","useCallback","handleOpen","handleClose","useLayoutEffect","_react","_radixUiReactPopper","Root","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipProvider","onTriggerChange","onFocus","onOpen","onClose","TRIGGER_DEFAULT_TAG","TooltipTrigger","forwardRef","forwardedRef","as","triggerProps","composedTriggerRef","useComposedRefs","node","Anchor","aria-describedby","data-state","ref","onMouseEnter","composeEventHandlers","onMouseLeave","onMouseDown","onBlur","onKeyDown","key","TooltipContent","forceMount","contentProps","Presence","present","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipContentImpl","TooltipContentImpl","aria-label","ariaLabel","portalled","PortalWrapper","Portal","Fragment","useEscapeKeydown","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$CheckTriggerMoved","Content","style","--radix-tooltip-content-transform-origin","Slottable","_radixUiReactVisuallyHidden","role","TooltipArrow","extendPrimitive","PopperPrimitive","Arrow","displayName","CheckTriggerMoved","triggerRect","useRect","triggerLeft","left","previousTriggerLeft","usePrevious","triggerTop","top","previousTriggerTop","Trigger"],"mappings":"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","sourcesContent":["const ASSIGN_ACTION_TYPE = 'machine.actions.assign' as const;\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\ntype StateChart<State extends string, Context, Event extends { type: string }> = {\n  initial: State;\n  context: Context;\n  on?: {\n    [eventType in Event['type']]?: Transition<State, Context, Event>;\n  };\n  states: {\n    [stateValue in State]: {\n      on?: {\n        [eventType in Event['type']]?: Transition<State, Context, Event>;\n      };\n      entry?: Array<Action<Context, Event>>;\n      exit?: Array<Action<Context, Event>>;\n    };\n  };\n};\n\ntype Transition<State extends string, Context, Event> = {\n  target?: State;\n  actions?: Array<Action<Context, Event>>;\n  cond?: (context: Context, Event: Event) => boolean;\n};\n\ntype Action<Context, Event> = ActionFunction<Context, Event> | AssignAction<Context, Event>;\n\ntype ActionFunction<Context, Event> = (\n  context: Context,\n  event: Event,\n  send: (event: Event) => void\n) => void;\n\nfunction createStateMachine<State extends string, Context, Event extends { type: string }>(\n  stateChart: StateChart<State, Context, Event>,\n  { debug = false, warnOnUnknownTransitions = !isProduction } = {}\n) {\n  let currentState = stateChart.initial;\n  let currentContext = stateChart.context;\n\n  type CallbackFn = (args: { state: State; context: Context }) => void;\n  const subscriptions: Array<CallbackFn> = [];\n\n  function subscribe(callback: CallbackFn) {\n    subscriptions.push(callback);\n    return () => {\n      subscriptions.splice(subscriptions.indexOf(callback), 1);\n    };\n  }\n\n  function notify() {\n    subscriptions.forEach((callback) => callback({ state: currentState, context: currentContext }));\n  }\n\n  const send = (event: Event) => {\n    const stateDefinition = stateChart.states[currentState];\n    const type: Event['type'] | undefined = event.type;\n    const topLevelTransition: Transition<State, Context, Event> | undefined = stateChart.on?.[type];\n    const stateTransition: Transition<State, Context, Event> | undefined =\n      stateDefinition.on?.[type];\n    const transition = topLevelTransition ?? stateTransition;\n\n    if (transition === undefined) {\n      if (warnOnUnknownTransitions) {\n        console.warn(\n          `From state: \"${currentState}\", event \"${type}\" has no transition to any state`\n        );\n      }\n    } else {\n      const { target: nextState, actions = [], cond = () => true } = transition;\n      const nextStateDefinition = nextState ? stateChart.states[nextState] : {};\n\n      if (cond(currentContext, event)) {\n        // execute actions\n        const allActions = (stateDefinition.exit || []).concat(\n          actions,\n          nextStateDefinition.entry || []\n        );\n        currentContext = executeActions(allActions, event, currentContext);\n\n        if (nextState) {\n          currentState = nextState;\n\n          if (debug) {\n            console.group('event:', event);\n            console.log('state:', currentState);\n            console.log('context:', currentContext);\n            console.groupEnd();\n          }\n\n          notify();\n        }\n      }\n    }\n  };\n\n  function getContext() {\n    return currentContext;\n  }\n\n  function executeActions(\n    actions: Array<Action<Context, Event>>,\n    event: Event,\n    context: Context\n  ): Context {\n    let nextContext = context;\n    actions?.forEach((action) => {\n      if (typeof action === 'function') {\n        action(nextContext, event, send);\n      } else if (action.type === ASSIGN_ACTION_TYPE) {\n        nextContext = action.assign(nextContext, event);\n      }\n    });\n    return nextContext;\n  }\n\n  return { subscribe, send, getContext };\n}\n\ntype AssignAction<Context, Event> = {\n  type: typeof ASSIGN_ACTION_TYPE;\n  assign(context: Context, event: Event): Context;\n};\n\nfunction assign<Context, Event>(\n  assignFn: AssignAction<Context, Event>['assign']\n): AssignAction<Context, Event> {\n  return { type: ASSIGN_ACTION_TYPE, assign: assignFn };\n}\n\nexport { createStateMachine, assign };\nexport type { StateChart, Action };\n","import { assign } from './createStateMachine';\n\nimport type { StateChart, Action } from './createStateMachine';\n\ntype TooltipState = 'closed' | 'opening' | 'open' | 'closing';\n\ntype TooltipEvent =\n  | { type: 'OPEN'; id: string; delayDuration?: number }\n  | { type: 'CLOSE'; id: string; skipDelayDuration: number }\n  | { type: 'FOCUS'; id: string }\n  | { type: 'DELAY_TIMER_END' }\n  | { type: 'SKIP_DELAY_TIMER_END' };\n\ntype TooltipContext = { id: string | null; delayed: boolean };\n\ntype TooltipStateChart = StateChart<TooltipState, TooltipContext, TooltipEvent>;\ntype TooltipAction = Action<TooltipContext, TooltipEvent>;\n\n// actions\nlet delayTimerId: number;\nlet skipDelayTimerId: number;\n\nconst startDelayTimer: TooltipAction = (context, event, send) => {\n  const delayDuration: number | undefined = (event as any).delayDuration;\n  const sendTimerEnd = () => send({ type: 'DELAY_TIMER_END' });\n  if (delayDuration === undefined) {\n    sendTimerEnd();\n  } else {\n    delayTimerId = window.setTimeout(sendTimerEnd, delayDuration);\n  }\n};\n\nconst cancelDelayTimer: TooltipAction = () => clearTimeout(delayTimerId);\n\nconst startSkipDelayTimer: TooltipAction = (context, event, send) => {\n  const skipDelayDuration: number = (event as any).skipDelayDuration ?? 300;\n  skipDelayTimerId = window.setTimeout(\n    () => send({ type: 'SKIP_DELAY_TIMER_END' }),\n    skipDelayDuration\n  );\n};\n\nconst cancelSkipDelayTimer: TooltipAction = () => clearTimeout(skipDelayTimerId);\n\nconst setId: TooltipAction = assign((context, event) => ({\n  ...context,\n  id: (event as any).id ?? context.id,\n}));\nconst resetId: TooltipAction = assign((context) => ({ ...context, id: null }));\nconst setDelayed: TooltipAction = assign((context) => ({ ...context, delayed: true }));\nconst resetDelayed: TooltipAction = assign((context) => ({ ...context, delayed: false }));\n\nconst tooltipStateChart: TooltipStateChart = {\n  initial: 'closed',\n  context: { id: null, delayed: false },\n  on: {\n    FOCUS: { target: 'open' },\n  },\n  states: {\n    closed: {\n      entry: [resetId],\n      on: {\n        OPEN: { target: 'opening' },\n      },\n    },\n\n    opening: {\n      entry: [startDelayTimer, setId, setDelayed],\n      exit: [cancelDelayTimer],\n      on: {\n        DELAY_TIMER_END: { target: 'open' },\n        CLOSE: { target: 'closed' },\n      },\n    },\n\n    open: {\n      entry: [setId],\n      exit: [resetDelayed],\n      on: {\n        OPEN: { target: 'open' },\n        CLOSE: {\n          target: 'closing',\n          cond: (context, event) => context.id === (event as any).id,\n        },\n      },\n    },\n\n    closing: {\n      entry: [startSkipDelayTimer],\n      exit: [cancelSkipDelayTimer],\n      on: {\n        OPEN: { target: 'open' },\n        SKIP_DELAY_TIMER_END: { target: 'closed' },\n      },\n    },\n  },\n};\n\nexport { tooltipStateChart };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { Presence } from '@radix-ui/react-presence';\nimport { extendPrimitive } from '@radix-ui/react-primitive';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { Portal } from '@radix-ui/react-portal';\nimport { Slottable } from '@radix-ui/react-slot';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\nimport { useId } from '@radix-ui/react-id';\nimport { createStateMachine } from './createStateMachine';\nimport { tooltipStateChart } from './tooltipStateChart';\n\nimport type * as Polymorphic from '@radix-ui/react-polymorphic';\n\n/* -------------------------------------------------------------------------------------------------\n * State machine\n * -----------------------------------------------------------------------------------------------*/\n\ntype StateAttribute = 'closed' | 'delayed-open' | 'instant-open';\nconst stateMachine = createStateMachine(tooltipStateChart);\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  contentId: string;\n  open: boolean;\n  stateAttribute: StateAttribute;\n  trigger: React.ElementRef<typeof TooltipTrigger> | null;\n  onTriggerChange(trigger: React.ElementRef<typeof TooltipTrigger> | null): void;\n  onFocus(): void;\n  onOpen(): void;\n  onClose(): void;\n};\n\nconst [TooltipProvider, useTooltipContext] = createContext<TooltipContextValue>(TOOLTIP_NAME);\n\ntype TooltipOwnProps = {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n\n  /**\n   * The duration from when the mouse enters the trigger until the tooltip gets opened.\n   * (default: 700)\n   */\n  delayDuration?: number;\n\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * (default: 300)\n   */\n  skipDelayDuration?: number;\n};\n\nconst Tooltip: React.FC<TooltipOwnProps> = (props) => {\n  const {\n    children,\n    open: openProp,\n    defaultOpen = false,\n    onOpenChange,\n    delayDuration = 700,\n    skipDelayDuration = 300,\n  } = props;\n  const [trigger, setTrigger] = React.useState<HTMLButtonElement | null>(null);\n  const contentId = useId();\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n  const [stateAttribute, setStateAttribute] = React.useState<StateAttribute>(\n    openProp ? 'instant-open' : 'closed'\n  );\n\n  // control open state using state machine subscription\n  React.useEffect(() => {\n    const unsubscribe = stateMachine.subscribe(({ state, context }) => {\n      if (state === 'open' && context.id === contentId) {\n        setOpen(true);\n      } else {\n        setOpen(false);\n      }\n    });\n\n    return unsubscribe;\n  }, [contentId, setOpen]);\n\n  // sync state attribute with using state machine subscription\n  React.useEffect(() => {\n    const unsubscribe = stateMachine.subscribe(({ state, context }) => {\n      if (context.id === contentId) {\n        if (state === 'open') {\n          setStateAttribute(context.delayed ? 'delayed-open' : 'instant-open');\n        } else {\n          setStateAttribute('closed');\n        }\n      } else {\n        setStateAttribute('closed');\n      }\n    });\n\n    return unsubscribe;\n  }, [contentId]);\n\n  const handleFocus = React.useCallback(() => stateMachine.send({ type: 'FOCUS', id: contentId }), [\n    contentId,\n  ]);\n  const handleOpen = React.useCallback(\n    () => stateMachine.send({ type: 'OPEN', id: contentId, delayDuration }),\n    [contentId, delayDuration]\n  );\n  const handleClose = React.useCallback(\n    () => stateMachine.send({ type: 'CLOSE', id: contentId, skipDelayDuration }),\n    [skipDelayDuration, contentId]\n  );\n\n  // send transition if the component unmounts\n  React.useEffect(() => () => handleClose(), [handleClose]);\n\n  // if we're controlling the component\n  // put the state machine in the appropriate state\n  useLayoutEffect(() => {\n    if (openProp === true) {\n      stateMachine.send({ type: 'OPEN', id: contentId });\n    }\n  }, [contentId, openProp]);\n\n  return (\n    <PopperPrimitive.Root>\n      <TooltipProvider\n        contentId={contentId}\n        open={open}\n        stateAttribute={stateAttribute}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        onFocus={handleFocus}\n        onOpen={handleOpen}\n        onClose={handleClose}\n      >\n        {children}\n      </TooltipProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\nconst TRIGGER_DEFAULT_TAG = 'button';\n\ntype TooltipTriggerOwnProps = Omit<\n  Polymorphic.OwnProps<typeof PopperPrimitive.Anchor>,\n  'virtualRef'\n>;\ntype TooltipTriggerPrimitive = Polymorphic.ForwardRefComponent<\n  typeof TRIGGER_DEFAULT_TAG,\n  TooltipTriggerOwnProps\n>;\n\nconst TooltipTrigger = React.forwardRef((props, forwardedRef) => {\n  const { as = TRIGGER_DEFAULT_TAG, ...triggerProps } = props;\n  const context = useTooltipContext(TRIGGER_NAME);\n  const composedTriggerRef = useComposedRefs(forwardedRef, (node) => context.onTriggerChange(node));\n\n  return (\n    <PopperPrimitive.Anchor\n      type=\"button\"\n      aria-describedby={context.open ? context.contentId : undefined}\n      data-state={context.stateAttribute}\n      {...triggerProps}\n      as={as}\n      ref={composedTriggerRef}\n      onMouseEnter={composeEventHandlers(props.onMouseEnter, context.onOpen)}\n      onMouseLeave={composeEventHandlers(props.onMouseLeave, context.onClose)}\n      onMouseDown={composeEventHandlers(props.onMouseDown, context.onClose)}\n      onFocus={composeEventHandlers(props.onFocus, context.onFocus)}\n      onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n      onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n        if (event.key === 'Enter' || event.key === ' ') {\n          context.onClose();\n        }\n      })}\n    />\n  );\n}) as TooltipTriggerPrimitive;\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof TooltipContentImpl>,\n  {\n    /**\n     * Used to force mounting when more control is needed. Useful when\n     * controlling animation with React animation libraries.\n     */\n    forceMount?: true;\n  }\n>;\n\ntype TooltipContentPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof TooltipContentImpl>,\n  TooltipContentOwnProps\n>;\n\nconst TooltipContent = React.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...contentProps } = props;\n  const context = useTooltipContext(CONTENT_NAME);\n  return (\n    <Presence present={forceMount || context.open}>\n      <TooltipContentImpl ref={forwardedRef} {...contentProps} />\n    </Presence>\n  );\n}) as TooltipContentPrimitive;\n\ntype TooltipContentImplOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof PopperPrimitive.Content>,\n  {\n    /**\n     * A more descriptive label for accessibility purpose\n     */\n    'aria-label'?: string;\n\n    /**\n     * Whether the Tooltip should render in a Portal\n     * (default: `true`)\n     */\n    portalled?: boolean;\n  }\n>;\n\ntype TooltipContentImplPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof PopperPrimitive.Content>,\n  TooltipContentImplOwnProps\n>;\n\nconst TooltipContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { children, 'aria-label': ariaLabel, portalled = true, ...contentProps } = props;\n  const context = useTooltipContext(CONTENT_NAME);\n  const PortalWrapper = portalled ? Portal : React.Fragment;\n\n  useEscapeKeydown(() => context.onClose());\n\n  return (\n    <PortalWrapper>\n      <CheckTriggerMoved />\n      <PopperPrimitive.Content\n        data-state={context.stateAttribute}\n        {...contentProps}\n        ref={forwardedRef}\n        style={{\n          ...contentProps.style,\n          // re-namespace exposed content custom property\n          ['--radix-tooltip-content-transform-origin' as any]: 'var(--radix-popper-transform-origin)',\n        }}\n      >\n        <Slottable>{children}</Slottable>\n        <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n          {ariaLabel || children}\n        </VisuallyHiddenPrimitive.Root>\n      </PopperPrimitive.Content>\n    </PortalWrapper>\n  );\n}) as TooltipContentImplPrimitive;\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst TooltipArrow = extendPrimitive(PopperPrimitive.Arrow, { displayName: 'TooltipArrow' });\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction CheckTriggerMoved() {\n  const context = useTooltipContext('CheckTriggerMoved');\n\n  const triggerRect = useRect(context.trigger);\n  const triggerLeft = triggerRect?.left;\n  const previousTriggerLeft = usePrevious(triggerLeft);\n  const triggerTop = triggerRect?.top;\n  const previousTriggerTop = usePrevious(triggerTop);\n  const handleClose = context.onClose;\n\n  React.useEffect(() => {\n    // checking if the user has scrolled…\n    const hasTriggerMoved =\n      (previousTriggerLeft !== undefined && previousTriggerLeft !== triggerLeft) ||\n      (previousTriggerTop !== undefined && previousTriggerTop !== triggerTop);\n\n    if (hasTriggerMoved) {\n      handleClose();\n    }\n  }, [handleClose, previousTriggerLeft, previousTriggerTop, triggerLeft, triggerTop]);\n\n  return null;\n}\n\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Root,\n  Trigger,\n  Content,\n  Arrow,\n};\nexport type { TooltipTriggerPrimitive, TooltipContentPrimitive };\n"]},"metadata":{},"sourceType":"module"}