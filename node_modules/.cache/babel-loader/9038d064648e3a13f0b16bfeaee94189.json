{"ast":null,"code":"import { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect as t } from \"@radix-ui/react-use-layout-effect\";\nimport e from \"react-dom\";\nimport * as r from \"react\";\nimport l from \"@babel/runtime/helpers/esm/extends\";\nexport const Portal = /*#__PURE__*/r.forwardRef((a, i) => {\n  var n, d;\n  const {\n    containerRef: m,\n    style: s,\n    ...u\n  } = a,\n        c = null !== (n = null == m ? void 0 : m.current) && void 0 !== n ? n : null === globalThis || void 0 === globalThis || null === (d = globalThis.document) || void 0 === d ? void 0 : d.body,\n        [, f] = r.useState({});\n  return t(() => {\n    f({});\n  }, []), c ? /*#__PURE__*/e.createPortal( /*#__PURE__*/r.createElement(o, l({\n    \"data-radix-portal\": \"\"\n  }, u, {\n    ref: i,\n    style: c === document.body ? {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      zIndex: 2147483647,\n      ...s\n    } : void 0\n  })), c) : null;\n});\n/*#__PURE__*/\n\nexport const Root = Portal;","map":{"version":3,"sources":["packages/react/portal/src/Portal.tsx"],"names":["Portal","React","forwardRef","props","forwardedRef","containerRef","style","portalProps","hostElement","current","globalThis","document","body","forceUpdate","useState","useLayoutEffect","ReactDOM","createPortal","_react","Primitive","data-radix-portal","ref","position","top","left","zIndex","undefined","Root"],"mappings":";;;;;OA2BA,MAAMA,MAAAA,GAAAA,aAASC,CAAAA,CAAMC,UAAND,CAAiB,CAACE,CAAD,EAAQC,CAAR,KAAQA;AAAiB,MAAA,CAAA,EAAA,CAAA;AACvD,QAAA;AAAMC,IAAAA,YAAAA,EAAEA,CAAR;AAAMA,IAAAA,KAAAA,EAAgBC,CAAtB;AAAsBA,OAAUC;AAAhC,MAAgDJ,CAAhD;AAAA,QACMK,CAAAA,GAAW,UAAA,CAAA,GAAGH,QAAAA,CAAAA,GAAAA,KAAH,CAAGA,GAAAA,CAAAA,CAAcI,OAAjB,KAAiBA,KAAjB,CAAiBA,KAAjB,CAAA,GAAA,CAAA,GAAA,SAA4BC,UAA5B,IAA4BA,KAA5B,CAA4BA,KAAAA,UAA5B,IAAA,UAAA,CAAA,GAA4BA,UAAAA,CAAYC,QAAxC,CAAA,IAAwCA,KAAxC,CAAwCA,KAAxC,CAAA,GAAA,KAAA,CAAA,GAA4BD,CAAAA,CAAsBE,IADnE;AAAA,QACmEA,GAC1DC,CAD0DD,IAC3CX,CAAAA,CAAMa,QAANb,CAAe,EAAfA,CAFxB;AAYA,SAJAc,CAAAA,CAAgB,MAAA;AACdF,IAAAA,CAAAA,CAAY,EAAZA,CAAAA;AAAY,GADdE,EAEG,EAFHA,CAAAA,EAIIP,CAAAA,GAAAA,aACKQ,CAAAA,CAASC,YAATD,EAASC,aACdC,CAAAA,CAAAA,aAAAA,CAACC,CAADD,EAAAA,CAAAA,CAAAA;AACEE,yBAAkB;AADpBF,GAAAA,EAEMX,CAFNW,EAAAA;AAGEG,IAAAA,GAAAA,EAAKjB,CAHPc;AAIEZ,IAAAA,KAAAA,EAOEE,CAAAA,KAAgBG,QAAAA,CAASC,IAAzBJ,GACI;AACEc,MAAAA,QAAAA,EAAU,UADZ;AAEEC,MAAAA,GAAAA,EAAK,CAFP;AAGEC,MAAAA,IAAAA,EAAM,CAHR;AAIEC,MAAAA,MAAAA,EAnDI,UA+CN;AA/CM,SAoDDnB;AALL,KADJE,GAMSF,KAELoB;AAnBRR,GAAAA,CAAAA,CADKF,EAuBLR,CAvBKQ,CADLR,GA6BG,IA7BP;AA6BO,CA1CMP,CAAf;AA0CS;;AAAA,OAKT,MAAM0B,IAAAA,GAAO3B,MAAb","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Polymorphic from '@radix-ui/react-polymorphic';\n\nconst MAX_Z_INDEX = 2147483647;\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof Primitive>,\n  {\n    containerRef?: React.RefObject<HTMLElement>;\n  }\n>;\n\ntype PortalPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof Primitive>,\n  PortalOwnProps\n>;\n\nconst Portal = React.forwardRef((props, forwardedRef) => {\n  const { containerRef, style, ...portalProps } = props;\n  const hostElement = containerRef?.current ?? globalThis?.document?.body;\n  const [, forceUpdate] = React.useState({});\n\n  /**\n   * containerRef.current won't be set on first render, so we force a re-render.\n   * Because we do this in `useLayoutEffect`, we still avoid a flash.\n   */\n  useLayoutEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  if (hostElement) {\n    return ReactDOM.createPortal(\n      <Primitive\n        data-radix-portal=\"\"\n        {...portalProps}\n        ref={forwardedRef}\n        style={\n          /**\n           * If the Portal is injected in `body`, we assume we want whatever is portalled\n           * to appear on top of everything. Ideally this would be handled by making sure the\n           * app root creates a new stacking context, however this is quite hard to automate.\n           * For this reason, we have opted for setting the max z-index on the portal itself.\n           */\n          hostElement === document.body\n            ? {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                zIndex: MAX_Z_INDEX,\n                ...style,\n              }\n            : undefined\n        }\n      />,\n      hostElement\n    );\n  }\n\n  // bail out of ssr\n  return null;\n}) as PortalPrimitive;\n\nPortal.displayName = PORTAL_NAME;\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalPrimitive };\n"]},"metadata":{},"sourceType":"module"}