{"ast":null,"code":"import * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as r } from \"@radix-ui/react-primitive\";\nimport { useSize as o } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContext as n } from \"@radix-ui/react-context\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as a } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nimport c from \"@babel/runtime/helpers/esm/extends\";\nconst [p, l] = n(\"Popper\");\nexport const Popper = ({\n  children: e\n}) => {\n  const [r, o] = s.useState(null);\n  /*#__PURE__*/\n\n  return s.createElement(p, {\n    anchor: r,\n    onAnchorChange: o\n  }, e);\n};\n/*#__PURE__*/\n\nexport const PopperAnchor = /*#__PURE__*/s.forwardRef((e, o) => {\n  const {\n    virtualRef: t,\n    children: n,\n    ...a\n  } = e,\n        p = l(\"PopperAnchor\"),\n        f = s.useRef(null),\n        d = i(o, f);\n  return s.useEffect(() => {\n    p.onAnchorChange((null == t ? void 0 : t.current) || f.current);\n  }), t ? null : /*#__PURE__*/s.createElement(r, c({}, a, {\n    ref: d\n  }), n);\n});\n/*#__PURE__*/\n\nconst [f, d] = n(\"PopperContent\");\nexport const PopperContent = /*#__PURE__*/s.forwardRef((e, n) => {\n  const {\n    side: p = \"bottom\",\n    sideOffset: d,\n    align: u = \"center\",\n    alignOffset: m,\n    collisionTolerance: w,\n    avoidCollisions: h = !0,\n    ...x\n  } = e,\n        A = l(\"PopperContent\"),\n        [v, g] = s.useState(),\n        E = t(A.anchor),\n        [y, C] = s.useState(null),\n        P = o(y),\n        [S, R] = s.useState(null),\n        O = o(S),\n        b = i(n, e => C(e)),\n        z = function () {\n    const [e, r] = s.useState(void 0);\n    return s.useEffect(() => {\n      let e;\n\n      function o() {\n        r({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }\n\n      function t() {\n        window.clearTimeout(e), e = window.setTimeout(o, 100);\n      }\n\n      return o(), window.addEventListener(\"resize\", t), () => window.removeEventListener(\"resize\", t);\n    }, []), e;\n  }(),\n        T = z ? DOMRect.fromRect({ ...z,\n    x: 0,\n    y: 0\n  }) : void 0,\n        {\n    popperStyles: k,\n    arrowStyles: L,\n    placedSide: B,\n    placedAlign: D\n  } = a({\n    anchorRect: E,\n    popperSize: P,\n    arrowSize: O,\n    arrowOffset: v,\n    side: p,\n    sideOffset: d,\n    align: u,\n    alignOffset: m,\n    shouldAvoidCollisions: h,\n    collisionBoundariesRect: T,\n    collisionTolerance: w\n  }),\n        H = void 0 !== B;\n  /*#__PURE__*/\n\n\n  return s.createElement(\"div\", {\n    style: k,\n    \"data-radix-popper-content-wrapper\": \"\"\n  }, /*#__PURE__*/s.createElement(f, {\n    arrowStyles: L,\n    onArrowChange: R,\n    onArrowOffsetChange: g\n  }, /*#__PURE__*/s.createElement(r, c({\n    \"data-side\": B,\n    \"data-align\": D\n  }, x, {\n    style: { ...x.style,\n      animation: H ? void 0 : \"none\"\n    },\n    ref: b\n  }))));\n});\n/*#__PURE__*/\n\nexport const PopperArrow = /*#__PURE__*/s.forwardRef(function (r, o) {\n  const {\n    offset: t,\n    ...n\n  } = r,\n        i = d(\"PopperArrow\"),\n        {\n    onArrowOffsetChange: a\n  } = i;\n  return s.useEffect(() => a(t), [a, t]), /*#__PURE__*/s.createElement(\"span\", {\n    style: { ...i.arrowStyles,\n      pointerEvents: \"none\"\n    }\n  }, /*#__PURE__*/s.createElement(\"span\", {\n    ref: i.onArrowChange,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, /*#__PURE__*/s.createElement(e.Root, c({}, n, {\n    ref: o,\n    style: { ...n.style,\n      display: \"block\"\n    }\n  }))));\n});\n/*#__PURE__*/\n\nexport const Root = Popper;\nexport const Anchor = PopperAnchor;\nexport const Content = PopperContent;\nexport const Arrow = PopperArrow;","map":{"version":3,"sources":["packages/react/popper/src/Popper.tsx"],"names":["PopperProvider","usePopperContext","createContext","Popper","children","anchor","setAnchor","React","useState","_react","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperProvider","onAnchorChange","PopperAnchor","forwardRef","props","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useComposedRefs","useEffect","current","Primitive","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","collisionTolerance","avoidCollisions","contentProps","arrowOffset","setArrowOffset","anchorRect","useRect","content","setContent","contentSize","useSize","arrow","setArrow","arrowSize","node","windowSize","useWindowSize","collisionBoundariesRect","DOMRect","fromRect","x","y","undefined","popperStyles","arrowStyles","placedSide","placedAlign","getPlacementData","popperSize","shouldAvoidCollisions","isPlaced","style","data-radix-popper-content-wrapper","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperContentProvider","onArrowChange","onArrowOffsetChange","data-side","data-align","animation","PopperArrow","offset","arrowProps","pointerEvents","display","verticalAlign","_radixUiReactArrow","Root","setWindowSize","debounceTimerId","updateWindowSize","width","window","innerWidth","height","innerHeight","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","Anchor","Content","Arrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Polymorphic from '@radix-ui/react-polymorphic';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createContext<PopperContextValue>(POPPER_NAME);\n\nconst Popper: React.FC = ({ children }) => {\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof Primitive>,\n  { virtualRef?: React.RefObject<Measurable> }\n>;\ntype PopperAnchorPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof Primitive>,\n  PopperAnchorOwnProps\n>;\n\nconst PopperAnchor = React.forwardRef((props, forwardedRef) => {\n  const { virtualRef, children, ...anchorProps } = props;\n  const context = usePopperContext(ANCHOR_NAME);\n  const ref = React.useRef<React.ElementRef<typeof Primitive>>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    // Consumer can anchor the popper to something that isn't\n    // a DOM node e.g. pointer position, so we override the\n    // `anchorRef` with their virtual ref in this case.\n    context.onAnchorChange(virtualRef?.current || ref.current);\n  });\n\n  return virtualRef ? null : (\n    <Primitive {...anchorProps} ref={composedRefs}>\n      {children}\n    </Primitive>\n  );\n}) as PopperAnchorPrimitive;\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  arrowStyles: React.CSSProperties;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  onArrowOffsetChange(offset?: number): void;\n};\n\nconst [PopperContentProvider, useContentContext] = createContext<PopperContentContextValue>(\n  CONTENT_NAME\n);\n\ntype PopperContentOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof Primitive>,\n  {\n    side?: Side;\n    sideOffset?: number;\n    align?: Align;\n    alignOffset?: number;\n    collisionTolerance?: number;\n    avoidCollisions?: boolean;\n  }\n>;\n\ntype PopperContentPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof Primitive>,\n  PopperContentOwnProps\n>;\n\nconst PopperContent = React.forwardRef((props, forwardedRef) => {\n  const {\n    side = 'bottom',\n    sideOffset,\n    align = 'center',\n    alignOffset,\n    collisionTolerance,\n    avoidCollisions = true,\n    ...contentProps\n  } = props;\n\n  const context = usePopperContext(CONTENT_NAME);\n  const [arrowOffset, setArrowOffset] = React.useState<number>();\n  const anchorRect = useRect(context.anchor);\n  const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n  const contentSize = useSize(content);\n  const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n  const arrowSize = useSize(arrow);\n\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n  const windowSize = useWindowSize();\n  const collisionBoundariesRect = windowSize\n    ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n    : undefined;\n\n  const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n    anchorRect,\n    popperSize: contentSize,\n    arrowSize,\n\n    // config\n    arrowOffset,\n    side,\n    sideOffset,\n    align,\n    alignOffset,\n    shouldAvoidCollisions: avoidCollisions,\n    collisionBoundariesRect,\n    collisionTolerance,\n  });\n  const isPlaced = placedSide !== undefined;\n\n  return (\n    <div style={popperStyles} data-radix-popper-content-wrapper=\"\">\n      <PopperContentProvider\n        arrowStyles={arrowStyles}\n        onArrowChange={setArrow}\n        onArrowOffsetChange={setArrowOffset}\n      >\n        <Primitive\n          data-side={placedSide}\n          data-align={placedAlign}\n          {...contentProps}\n          style={{\n            ...contentProps.style,\n            // if the PopperContent hasn't been placed yet (not all measurements done)\n            // we prevent animations so that users's animation don't kick in too early referring wrong sides\n            animation: !isPlaced ? 'none' : undefined,\n          }}\n          ref={composedRefs}\n        />\n      </PopperContentProvider>\n    </div>\n  );\n}) as PopperContentPrimitive;\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowOwnProps = Polymorphic.Merge<\n  Polymorphic.OwnProps<typeof ArrowPrimitive.Root>,\n  { offset?: number }\n>;\n\ntype PopperArrowPrimitive = Polymorphic.ForwardRefComponent<\n  Polymorphic.IntrinsicElement<typeof ArrowPrimitive.Root>,\n  PopperArrowOwnProps\n>;\n\nconst PopperArrow = React.forwardRef(function PopperArrow(props, forwardedRef) {\n  const { offset, ...arrowProps } = props;\n  const context = useContentContext(ARROW_NAME);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.onArrowChange}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n}) as PopperArrowPrimitive;\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n};\nexport type { PopperAnchorPrimitive, PopperContentPrimitive, PopperArrowPrimitive };\n"]},"metadata":{},"sourceType":"module"}